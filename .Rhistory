library()
shiny::runApp()
runApp()
geodata <- st_read("./www/map.js")
summary(geodata)
sum(geodata$shapeID)
sum(geodata$shapeID)
output$sum <- renderPrint(
paste("Totall Population :", sum(geodata$shapeID))
)
output$sum <- renderPrint(
paste("Totall Population :", sum(geodata$shapeID))
)
runApp()
geodata
head(geodata)
rank(geodata)
geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))
pal <- colorNumeric(palette = "YlOrRd", domain =geodata$shapeID)
sumTotal <- sum(geodata$shapeID)
rank(geodata$shapeID)
rank(geodata$shapeID)
rank(geodata$shapeID)
head(geodata$shapeID)
geodata %>%
select.list(shapeID) %>%
head(6)
shiny::runApp()
runApp()
runApp()
runApp()
install.packages("plotly")
runApp()
output$barChart <- renderPlotly({
geodata %>%
plot_ly() %>%
add_bars(x = geodata$shapeName, y = geodata$shapeID)
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$barChart <- renderPlotly({
geodata %>%
plot_ly() %>%
add_data(data = geodata,
x=~shapeName,
y=geodata$shapeID) %>%
layout(
title = "Bar Chart of Shape Data",
xaxis = list(title = "Shape Name"),
yaxis = list(title = "Shape ID"),
showlegend = FALSE
)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
sorted_data <- geodata %>%
arrange(desc(geometry$shapeID))
View(sorted_data)
geometry$shapeID
geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))
sorted_data <-arrange(geodata$shapeID)
runApp()
sorted_data <- geodata %>%
arrange( geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID)))
View(sorted_data)
runApp()
sorted_data <- geodata %>%
arrange( desc(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
View(sorted_data)
runApp()
runApp()
output$barChart <- renderPlotly({
sorted_data <- geodata %>%
arrange( desc(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
sorted_data %>%
plot_ly() %>%
add_bars(
data = sorted_data,
x = ~shapeName,
y = ~shapeID)%>%
layout(
xaxis = list(title = "Districts"),
yaxis = list(title = "Population")
)
})
sorted_data <- geodata %>%
arrange( desc(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
sorted_data %>%
plot_ly() %>%
add_bars(
data = sorted_data,
x = ~shapeName,
y = ~shapeID)%>%
layout(
xaxis = list(title = "Districts"),
yaxis = list(title = "Population")
)
print(sorted_data)
barplot(sorted_data$shapeID, names.arg = sorted_data$shapeName)
runApp()
library(plotly)
shiny::runApp()
runApp()
runApp()
runApp()
sorted_data <- geodata %>%
arrange( desc(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
new_data <- sorted_data
View(new_data)
runApp()
View(new_data)
runApp()
runApp()
runApp()
install.packages("bslib")
shiny::runApp()
runApp()
runApp()
output$donate <- renderText({
glue::glue("${(input$pct / 100) * 70} Billion")
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$top5 <- renderTable(
{sorted_data %>%
select(shapeName,shapeID)%>%
head(5)}
)
runApp()
runApp()
runApp()
runApp()
View(sorted_data)
runApp()
output$top5 <- renderDataTable({
sorted_data%>%
select(shapeName, shapeID) %>%
arrange(desc(shapeID)) %>%
head(5)
})
runApp()
runApp()
sorted_data_asc <- geodata %>%
arrange( asc(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
sorted_data_asc <- geodata %>%
arrange( asce(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
runApp()
sorted_data_asc <- geodata %>%
arrange( geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID)))
View(sorted_data_asc)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
choics <- sorted_data %>%
select(shapeName) %>%
names()
choics
choics <- sorted_data %>%
select() %>%
names()
choics <- sorted_data %>%
select(-shapeGroup,-geometry) %>%
names()
choics
choics <- sorted_data %>%
names()
choics <- sorted_data %>%
names()
choics
choics <- sorted_data
View(choics)
choics <- sorted_data %>%
select(shapeName)%>%
str()
choics <- sorted_data %>%
select(shapeName)%>%
names()
choics <- sorted_data$shapeName
choics
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
year_data <- list(
"2024" = list(population = "16,61,36,660", growth_rate = "1.01%"),
"2010" = list(population = "13,96,41,660", growth_rate = "1.20%")
)
runApp()
output$rateT <- renderUI({
value_box(
title = "Population Growth Rate",
value = year_data[[input$rate]]$growth_rate,  # Fetch from dataset
showcase = bsicons::bs_icon("person-bounding-box"),
theme = value_box_theme(bg = "#e6f2fd", fg = "#0B538E"),
height = 120
)
})
runApp()
year_data <- list(
"2024" = list(population = "16,61,36,660", growth_rate = "1.01%"),
"2023" = list(population = "16,44,50,000", growth_rate = "1.02%"),
"2022" = list(population = "16,27,80,000", growth_rate = "1.03%"),
"2021" = list(population = "16,11,26,000", growth_rate = "1.04%"),
"2020" = list(population = "15,94,88,000", growth_rate = "1.05%"),
"2019" = list(population = "15,78,66,000", growth_rate = "1.06%"),
"2018" = list(population = "15,62,60,000", growth_rate = "1.07%"),
"2017" = list(population = "15,46,70,000", growth_rate = "1.08%"),
"2016" = list(population = "15,31,00,000", growth_rate = "1.09%"),
"2015" = list(population = "15,15,50,000", growth_rate = "1.10%"),
"2014" = list(population = "15,00,20,000", growth_rate = "1.11%"),
"2013" = list(population = "14,85,00,000", growth_rate = "1.12%"),
"2012" = list(population = "14,70,00,000", growth_rate = "1.13%"),
"2011" = list(population = "14,55,10,000", growth_rate = "1.14%"),
"2010" = list(population = "14,40,30,000", growth_rate = "1.15%")
)
year_data <- list(
"2024" = list(population = "174,701,211", growth_rate = "1.01%"),
"2023" = list(population = "172,954,319", growth_rate = "1.03%"),
"2022" = list(population = "171,186,372", growth_rate = "1.08%"),
"2021" = list(population = "169,356,251", growth_rate = "1.16%"),
"2020" = list(population = "167,420,951", growth_rate = "1.15%"),
"2019" = list(population = "165,516,222", growth_rate = "1.12%"),
"2018" = list(population = "163,683,958", growth_rate = "1.17%"),
"2017" = list(population = "161,793,964", growth_rate = "1.26%"),
"2016" = list(population = "159,784,568", growth_rate = "1.24%"),
"2015" = list(population = "157,830,000", growth_rate = "1.20%"),
"2014" = list(population = "155,961,299", growth_rate = "1.25%"),
"2013" = list(population = "154,030,139", growth_rate = "1.28%"),
"2012" = list(population = "152,090,649", growth_rate = "1.25%"),
"2011" = list(population = "150,211,005", growth_rate = "1.23%"),
"2010" = list(population = "148,391,139", growth_rate = "1.15%"),
"2009" = list(population = "146,706,810", growth_rate = "0.88%"),
"2008" = list(population = "145,421,318", growth_rate = "0.89%"),
"2007" = list(population = "144,135,934", growth_rate = "1.06%"),
"2006" = list(population = "142,628,831", growth_rate = "1.22%"),
"2005" = list(population = "140,912,590", growth_rate = "1.53%"),
"2004" = list(population = "138,789,725", growth_rate = "1.68%"),
"2003" = list(population = "136,503,206", growth_rate = "1.76%"),
"2002" = list(population = "134,139,826", growth_rate = "1.88%"),
"2001" = list(population = "131,670,484", growth_rate = "1.92%"),
"2000" = list(population = "129,193,327", growth_rate = "1.92%")
)
runApp()
rsconnect::setAccountInfo(name='sabberrahman', token='E46E205B68DB4DA906112FC3E683DF86', secret='R41apoLmtgHexsFWZ97VnnwN/w1hDj9rBFgj8oGV')
library(shiny)
library(shinydashboard)
library(sf)
library(DT)
library(leaflet)
library(plotly)
library(dplyr)
library(bslib)
geodata <- st_read("./www/map.js")
geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))
pal <- colorNumeric(palette = "YlOrRd", domain =geodata$shapeID)
sumTotal <- sum(geodata$shapeID)
sorted_data <- geodata %>%
arrange( desc(geodata$shapeID <- as.numeric(gsub(",", "", geodata$shapeID))))
choics <- sorted_data$shapeName
year_data <- list(
"2024" = list(population = "174,701,211", growth_rate = "1.01%"),
"2023" = list(population = "172,954,319", growth_rate = "1.03%"),
"2022" = list(population = "171,186,372", growth_rate = "1.08%"),
"2021" = list(population = "169,356,251", growth_rate = "1.16%"),
"2020" = list(population = "167,420,951", growth_rate = "1.15%"),
"2019" = list(population = "165,516,222", growth_rate = "1.12%"),
"2018" = list(population = "163,683,958", growth_rate = "1.17%"),
"2017" = list(population = "161,793,964", growth_rate = "1.26%"),
"2016" = list(population = "159,784,568", growth_rate = "1.24%"),
"2015" = list(population = "157,830,000", growth_rate = "1.20%"),
"2014" = list(population = "155,961,299", growth_rate = "1.25%"),
"2013" = list(population = "154,030,139", growth_rate = "1.28%"),
"2012" = list(population = "152,090,649", growth_rate = "1.25%"),
"2011" = list(population = "150,211,005", growth_rate = "1.23%"),
"2010" = list(population = "148,391,139", growth_rate = "1.15%"),
"2009" = list(population = "146,706,810", growth_rate = "0.88%"),
"2008" = list(population = "145,421,318", growth_rate = "0.89%"),
"2007" = list(population = "144,135,934", growth_rate = "1.06%"),
"2006" = list(population = "142,628,831", growth_rate = "1.22%"),
"2005" = list(population = "140,912,590", growth_rate = "1.53%"),
"2004" = list(population = "138,789,725", growth_rate = "1.68%"),
"2003" = list(population = "136,503,206", growth_rate = "1.76%"),
"2002" = list(population = "134,139,826", growth_rate = "1.88%"),
"2001" = list(population = "131,670,484", growth_rate = "1.92%"),
"2000" = list(population = "129,193,327", growth_rate = "1.92%")
)
library(rsconnect)
rsconnect::setAccountInfo(name='sabberrahman', token='E46E205B68DB4DA906112FC3E683DF86', secret='R41apoLmtgHexsFWZ97VnnwN/w1hDj9rBFgj8oGV')
library(rsconnect)
rsconnect::deployApp('../map')
runApp()
